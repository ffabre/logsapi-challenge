version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    environment:
      SERVICES: sqs,s3
      EDGE_PORT: 4566
      AWS_DEFAULT_REGION: us-west-2
    ports:
      - "4566:4566"
      - "4576:4576"
    volumes:
      - ./localstack-setup.sh:/etc/localstack/init/ready.d/script.sh
    healthcheck:
      test: ["CMD-SHELL", "(curl -f http://localhost:4566/_localstack/health || exit 1) && (awslocal sqs list-queues | grep -q 'localstack-queue' || exit 1 )"]
      interval: 5s
      timeout: 5s
      retries: 5

  fastapi:
    image: logs-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_NAME: "db"
      DATABASE_HOST: "postgres"
      DATABASE_USER: "postgres"
      DATABASE_PASS: "secret"
      SQS_QUEUE_URL: "http://localstack:4566/000000000000/localstack-queue"
      AWS_ACCESS_KEY_ID: "test"
      AWS_SECRET_ACCESS_KEY: "test"
      AWS_ENDPOINT_URL: "http://localstack:4566"
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    ports:
      - "8000:80"
    volumes:
      - ./app:/app

  worker:
    image: logs-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_NAME: "db"
      DATABASE_HOST: "postgres"
      DATABASE_USER: "postgres"
      DATABASE_PASS: "secret"
      SQS_QUEUE_URL: "http://localstack:4566/000000000000/localstack-queue"
      AWS_ACCESS_KEY_ID: "test"
      AWS_SECRET_ACCESS_KEY: "test"
      AWS_ENDPOINT_URL: "http://localstack:4566"
      AWS_DEFAULT_REGION: us-west-2
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    command: ["python", "worker.py"]
    volumes:
      - ./app:/app
